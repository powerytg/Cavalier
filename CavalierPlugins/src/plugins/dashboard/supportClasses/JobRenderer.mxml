<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:crescent="library://cavalier/frameworks/crescent"	
			 	height="64"	
			 	autoDrawBackground="false" >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import frameworks.cavalier.app.controllers.JobController;
			import frameworks.cavalier.app.models.jobs.CRUDAction;
			import frameworks.cavalier.app.models.jobs.Job;
			import frameworks.cavalier.app.models.jobs.JobStatus;
			
			/**
			 * @private
			 */
			[Embed('images/AddJob.png')]
			private var addIcon:Class;

			/**
			 * @private
			 */
			[Embed('images/UpdateJob.png')]
			private var updateIcon:Class;

			/**
			 * @private
			 */
			[Embed('images/DeleteJob.png')]
			private var deleteIcon:Class;

			/**
			 * @private
			 */
			[Bindable]
			private var jobIcon:Class;
			
			/**
			 * @public
			 */
			override public function set data(value:Object):void{
				super.data = value;
				
				if(data == null)
					return;
				
				var job:Job = data as Job;
				switch(job.action){
					case CRUDAction.CREATE:
						jobIcon = addIcon;
						break;
					case CRUDAction.UPDATE:
						jobIcon = updateIcon;
						break;

					case CRUDAction.DELETE:
						jobIcon = deleteIcon;
						break;

				}
			}
			
			/**
			 * @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				
				graphics.clear();
				graphics.lineStyle(1, 0x959595);
				graphics.moveTo(10, unscaledHeight);
				graphics.lineTo(unscaledWidth, unscaledHeight);
			}
			
			/**
			 * @private
			 */
			private function onDeleteButtonClick():void{
				JobController.jobController.cancelJob(data as Job);
			}
			
			/**
			 * @private
			 */
			private function onRetryClick():void{
				(data as Job).doAction();
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="selected"/>
	</s:states>
	
	<crescent:DefaultItemRendererBackground width="100%" height="100%"
											alpha.normal="0" alpha.selected="1"/>
	
	<s:BitmapImage source="{jobIcon}" verticalCenter="0"/>
	
	<s:Label text="{data.description}" left="110" right="100" verticalCenter="0"/>
	
	<crescent:Button id="retryButton" label="Retry" verticalCenter="0" right="50"
					 visible="{data.status == JobStatus.FAILED}" 
					 click="onRetryClick()" />
	
	<s:BusyIndicator verticalCenter="0" right="0" visible="{data.status == JobStatus.RUNNING}"/>
	
	<crescent:OrangeCircularButton id="deleteJobButton" right="0" verticalCenter="0"
								   icon="@Embed('images/Remove.png')" 
							 	   click="onDeleteButtonClick()"
								   visible="{data.status == JobStatus.PENDING}" />	
	
</s:ItemRenderer>
