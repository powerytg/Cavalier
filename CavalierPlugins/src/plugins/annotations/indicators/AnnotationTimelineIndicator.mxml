<?xml version="1.0" encoding="utf-8"?>
<cavalier:IndicatorBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
						xmlns:s="library://ns.adobe.com/flex/spark" 
						xmlns:cavalier="library://cavalier/frameworks/cavalier"
						xmlns:crescent="library://cavalier/frameworks/crescent"
						width="100%" height="100%"	>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import frameworks.cavalier.app.controllers.JobController;
			import frameworks.cavalier.app.models.Annotation;
			import frameworks.cavalier.app.models.Clip;
			import frameworks.cavalier.app.models.jobs.AnnotationJob;
			import frameworks.cavalier.app.models.jobs.CRUDAction;
			import frameworks.cavalier.ui.components.events.TimelineEvent;
			
			import plugins.annotations.activities.events.AnnotationTimelineEvent;
			
			/**
			 * @public
			 */
			[Bindable]
			public var clip:Clip;
			
			/**
			 * @public
			 */
			[Bindable]
			public var currentTime:Number;
			
			/**
			 * @private
			 */
			private function onZoomInClick():void{
				timeline.zoomIn();
			}
			
			/**
			 * @private
			 */
			private function onZoomOutClick():void{
				timeline.zoomOut();
			}
			
			/**
			 * @private
			 */
			private function onShowDetails():void{
				dispatchEvent(new AnnotationTimelineEvent(AnnotationTimelineEvent.TOGGLE_DETAILED_TIMELINE));
			}
			
			/**
			 * @private
			 */
			private function onItemMove(evt:TimelineEvent):void{
				var job:AnnotationJob = new AnnotationJob();
				job.action = CRUDAction.UPDATE;
				job.payload = clip;
				
				JobController.jobController.submitJob(job);
				
				var annotation:Annotation = evt.markerMetadata as Annotation;
				annotation.cuePoint = evt.time;
			}
			
			/**
			 * @private
			 */
			private function onItemResize(evt:TimelineEvent):void{
				var job:AnnotationJob = new AnnotationJob();
				job.action = CRUDAction.UPDATE;
				job.payload = clip;
				
				JobController.jobController.submitJob(job);
				
				var annotation:Annotation = evt.markerMetadata as Annotation;
				annotation.duration = evt.time;
			}
		]]>
	</fx:Script>
	
	<!-- Background -->
	<s:BitmapImage source="@Embed('/images/TimelineBackground.png')" alpha="0.7"/>
	
	<s:HGroup width="100%" height="100%" verticalAlign="middle"
			  paddingLeft="110" >
		
		<crescent:CircularButton id="zoomInButton" icon="@Embed('/images/ZoomIn.png')" click="onZoomInClick()"/>
		<crescent:CircularButton id="zoomOutButton" icon="@Embed('/images/ZoomOut.png')" click="onZoomOutClick()"/>
		<crescent:Button id="showDetailsButon" icon="@Embed('/images/PopOut.png')" label="Detailed Timeline" height="45" click="onShowDetails()"/>
	</s:HGroup>
	
	<s:Scroller left="420" width="100%" height="100%" verticalScrollPolicy="off">
		<cavalier:Timeline id="timeline" totalTime="{clip.duration}"
						   currentTime="{currentTime}" 
						   height="100%" 
						   dataProvider="{clip.annotations}"
						   markerClass="plugins.annotations.activities.supportClasses.AnnotationMarker" 
						   itemMove="onItemMove(event)" 
						   itemResize="onItemResize(event)"/>
	</s:Scroller>
	
	
</cavalier:IndicatorBase>
