<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				width="100%" height="55"
				autoDrawBackground="false" xmlns:crescent="library://cavalier/frameworks/crescent"	>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import frameworks.cavalier.app.models.Ad;
			import frameworks.cavalier.app.models.AdCuePointEntry;
			import frameworks.cavalier.app.utils.TimeUtil;
			
			import mx.core.DragSource;
			import mx.managers.DragManager;
			
			/**
			 * @private
			 */
			[Embed('images/LinearAdMark.png')]
			private var linearFace:Class;

			/**
			 * @private
			 */
			[Embed('images/NonLinearAdMark.png')]
			private var nonLinearFace:Class;

			/**
			 * @private
			 */
			[Embed('images/LongAdMark.png')]
			private var longFace:Class;

			/**
			 * @private
			 */
			[Bindable]
			private var iconFace:Class;
			
			/**
			 * @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				
				graphics.clear();
				if(itemIndex % 2 == 0){
					
					graphics.beginFill(0xffffff, 0.1);
				}
				else{
					graphics.beginFill(0xffffff, 0);
				}
				
				graphics.drawRect(0, 0, unscaledWidth, unscaledHeight);				
				graphics.endFill();
				
				if(data.longAd)
					iconFace = longFace;
				else if(data.vastType == Ad.VAST_TYPE_NONLINEAR)
					iconFace = nonLinearFace;
			}
			
			/**
			 * @private
			 */
			override protected function stateChanged(oldState:String, newState:String, recursive:Boolean):void{
				super.stateChanged(oldState, newState, recursive);
				invalidateDisplayList();
			}
			
			/**
			 * @private
			 */
			private function onDrag(evt:MouseEvent):void{
				evt.stopPropagation();
				
				// Create an empty cuepoint
				var metadata:AdCuePointEntry = new AdCuePointEntry();
				metadata.ad = data as Ad;
				metadata.cuePoint = 0;
				
				var proxy:AdMarker = new AdMarker();
				proxy.data = metadata;
				proxy.width = 120;
				
				var ds:DragSource = new DragSource();
				ds.addData(metadata, "markerMetadata");
				DragManager.doDrag(dragHandle, ds, evt, proxy);
			}
			
			/**
			 * @private
			 */
			private function onMouseDown(evt:MouseEvent):void{
				evt.stopPropagation();
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="selected"/>
	</s:states>
	
	<s:transitions>
		<s:Transition toState="selected">
			<s:Sequence>
				<s:SetAction target="{selectedGroup}" property="visible"/>
				<s:Parallel>
					<s:Move target="{normalGroup}"/>
					<s:Move target="{selectedGroup}"/>
				</s:Parallel>
				<s:SetAction target="{normalGroup}" property="visible"/>
			</s:Sequence>
		</s:Transition>
		
		<s:Transition toState="normal">
			<s:Sequence>
				<s:SetAction target="{normalGroup}" property="visible"/>
				<s:Parallel>
					<s:Move target="{normalGroup}"/>
					<s:Move target="{selectedGroup}"/>
				</s:Parallel>
				<s:SetAction target="{selectedGroup}" property="visible"/>
			</s:Sequence>
		</s:Transition>
	</s:transitions>
	
	
	
	<!-- Normal -->
	<!--
	<s:BitmapImage source="{iconFace}"/>
	-->
	
	<s:HGroup id="normalGroup" width="100%" height="100%" 
			  paddingLeft="10" paddingRight="10"
			  verticalAlign="middle" gap="8"
			  left="0" left.selected="{-width}" 
			  visible.selected="false" visible.normal="true">
		
		<s:Label width="100%" text="{data.name}"
				 maxDisplayedLines="1"
				 fontSize="18"/> 
	</s:HGroup> 
	
	<!-- Selected items -->
	<s:Group id="selectedGroup" width="100%" height="100%"
			 left.selected="0" left.normal="{width}" 
			 visible.normal="false" visible.selected="true">
		<s:BitmapImage source="@Embed('images/AdSelectorBackground.png')" 
					   width="100%" height="100%" alpha="0.7"/>
		
		<s:BitmapImage source="@Embed('images/SelectedIndicator.png')"
					   height="100%"/>
		
		<s:Label id="dragLabel" text="... Drag to timeline" 
				 verticalCenter="0" right="75"
				 fontSize="30" fontFamily="Helvetica Neue UltraLight"/>
		
		<s:Image id="dragHandle" source="@Embed('images/DragIcon.png')"
				 verticalCenter="0" right="10" 
				 mouseDown="onMouseDown(event)" 
				 mouseMove="onDrag(event)" />				
	</s:Group>
	
</s:ItemRenderer>
