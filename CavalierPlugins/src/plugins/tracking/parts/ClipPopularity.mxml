<?xml version="1.0" encoding="utf-8"?>
<parts:StatisticUIPart xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:parts="frameworks.cavalier.ui.parts.*" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   creationComplete="init()" >
	
	<fx:Script>
		<![CDATA[
			import frameworks.cavalier.app.controllers.TrackingController;
			import frameworks.cavalier.app.events.AnalysisEvent;
			import frameworks.cavalier.app.models.Clip;
			import frameworks.cavalier.app.models.sync.Aggregator;
			import frameworks.crescent.activity.events.ActivityContainerEvent;
			
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			
			/**
			 * @private
			 */
			private var clip:Clip;
			
			/**
			 * @private
			 */
			private var clipWatcher:ChangeWatcher;
			
			/**
			 * @private
			 */
			[Bindable]
			private var allTimeStat:ArrayCollection;
			
			/**
			 * @private
			 */
			private function init():void{
				TrackingController.trackingController.addEventListener(AnalysisEvent.CLIP_HITS_CHANGE, onDataReceived);
				
				clip = Aggregator.aggregator.selectedClip;
				clipWatcher = ChangeWatcher.watch(Aggregator.aggregator, "selectedClip", onClipChange);
				
				if(clip)
					onClipChange();
			}
			
			/**
			 * @private
			 */
			override protected function onActivited(evt:ActivityContainerEvent):void{
				super.onActivited(evt);
				var clipChanged:Boolean = false;
				
				if(clip != Aggregator.aggregator.selectedClip){
						clip = Aggregator.aggregator.selectedClip;
						clipChanged = true;
				}
				
				if(!clipWatcher)
					clipWatcher = ChangeWatcher.watch(Aggregator.aggregator, "selectedClip", onClipChange);
				
				if(clipChanged)
					onClipChange();
			}
			
			/**
			 * @private
			 */
			override protected function onDestroy(evt:ActivityContainerEvent):void{
				super.onDestroy(evt);
				
				if(clipWatcher){
					clipWatcher.unwatch();
					clipWatcher = null;
				}
				
				clip = null;
			}
			
			/**
			 * @private
			 */
			override protected function onDeactivited(evt:ActivityContainerEvent):void{
				super.onDeactivited(evt);
				
				if(clipWatcher){
					clipWatcher.unwatch();
					clipWatcher = null;
				}
				
				clip = null;
			}
			
			/**
			 * @private
			 */
			private function onClipChange(evt:Event = null):void{
				if(clip && clip.id && clip.id != "")
					TrackingController.trackingController.analysisHitsByAllYears(clip);
			}
			
			/**
			 * @private
			 */
			private function onDataReceived(evt:AnalysisEvent):void{
				allTimeStat = evt.clipHits;
			}
			
			/**
			 * @private
			 */
			private function onItemClick(evt:ChartItemEvent):void{
				
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:SolidColorStroke id="stroke" color="#07f0c7"/>
		<s:LinearGradient id="fill" rotation="90">
			<s:GradientEntry color="#07f0c7" alpha="0.3"/>
			<s:GradientEntry color="#07f0c7" alpha="0"/>
		</s:LinearGradient>					
	</fx:Declarations>
	
	<mx:BarChart  id="chart" width="100%" height="100%" 
				  itemClick="onItemClick(event)" 
				  selectionMode="single"
				  dataProvider="{allTimeStat}" >
		<mx:series>
			<mx:BarSeries xField="label" yField="value"/>
		</mx:series>
	</mx:BarChart>

</parts:StatisticUIPart>
