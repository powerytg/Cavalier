<?xml version="1.0" encoding="utf-8"?>
<crescent:Activity xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:crescent="library://cavalier/frameworks/crescent"
				   xmlns:parts="plugins.resources.parts.*" 
				   title="browse playlists"
				   icon="@Embed('images/PlaylistBrowserActivityIcon.png')" >
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import frameworks.cavalier.app.controllers.JobController;
			import frameworks.cavalier.app.models.Playlist;
			import frameworks.cavalier.app.models.jobs.CRUDAction;
			import frameworks.cavalier.app.models.jobs.PlaylistJob;
			import frameworks.cavalier.app.models.sync.Aggregator;
			import frameworks.cavalier.plugin.managers.ShortcutManager;
			import frameworks.cavalier.ui.activities.managers.ActivityManager;
			
			import mx.collections.ArrayCollection;
			
			/**
			 * @private
			 */
			protected function onPropertyButtonClick():void{
				ActivityManager.activityManager.lookAtOrCreateNewByClassName("PlaylistEditorActivity");			
			}
			
			/**
			 * @private
			 */
			protected function onPreviewButtonClick():void{
				ActivityManager.activityManager.lookAtOrCreateNewByClassName("PreviewActivity");
			}
			
			/**
			 * @private
			 */
			protected function onCreatePlaylistButtonClick():void{
				ShortcutManager.shortcutManager.evokeShortcutByClassName("NewPlaylistShortcut");
			}

			/**
			 * @private
			 */
			protected function onDeletePlaylistButtonClick():void{				
				var playlists:ArrayCollection = Aggregator.aggregator.playlists;
				var playlist:Playlist = Aggregator.aggregator.selectedPlaylist;
				
				// Update views
				selector.dataProvider.removeItemAt(selector.dataProvider.getItemIndex(playlist));
				
				var job:PlaylistJob = new PlaylistJob();
				job.action = CRUDAction.DELETE;
				job.payload = playlist;
				JobController.jobController.submitJob(job);
			}

			/**
			 * @private
			 */
			protected function onAddClipButtonClick():void{
				if(!Aggregator.aggregator.selectedPlaylist)
					return;
				
				var clipChooser:AddToPlaylistActivity = new AddToPlaylistActivity();
				clipChooser.playlist = Aggregator.aggregator.selectedPlaylist;
				ActivityManager.activityManager.addActivityToFront(clipChooser);
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup width="100%" height="100%" gap="20">
		<parts:PlaylistCalendar id="calendar" width="190" height="100%"/>
		<parts:PlaylistSelector id="selector" width="100%" height="100%"/>
		
		<!-- Action buttons -->
		<s:VGroup id="editors" width="140" gap="15" clipAndEnableScrolling="true">
			<crescent:Button label="Properties" icon="@Embed('ui/chrome/images/PopOut.png')" width="100%" height="45" click="onPropertyButtonClick()"/>
			<crescent:Button label="Add Clips" icon="@Embed('ui/chrome/images/PopOut.png')" width="100%" height="45" click="onAddClipButtonClick()"/>
			
			<s:Spacer height="20"/>
			<crescent:Button label="Preview" icon="@Embed('ui/chrome/images/PopOut.png')" width="100%" height="45" click="onPreviewButtonClick()"/>
			
			<s:Spacer height="20"/>
			<crescent:RedButton label="Delete Selected" width="100%" height="45" click="onDeletePlaylistButtonClick()"/>
		</s:VGroup>
	</s:HGroup>
	
	<crescent:actions>
		<crescent:Button id="createPlaylistButton" label="New Playlist" click="onCreatePlaylistButtonClick()" icon="@Embed('images/Add.png')"/>
	</crescent:actions>
	
</crescent:Activity>
